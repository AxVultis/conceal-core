name: Build check

on:
  push:
    branches:
      - "**"
    tags-ignore:
      - "*" # We don't want this to run on release
  pull_request:

jobs:
  build-windows:
    name: Windows
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@master

      - name: Prepare version
        shell: powershell
        id: setup
        run: |
          os=windows
          ccx_version=${GITHUB_SHA::7}
          release_name=ccx-cli-"$os"-dev-"$ccx_version"
          echo "::set-output name=release_name::${release_name}"

      - name: Install msbuild
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Install dependencies
        shell: powershell
        run: |
          choco install boost-msvc-14.2
      
      - name: Build
        shell: powershell
        id: build
        run: |
          mkdir build
          cd build
          cmake .. -G "Visual Studio 16 2019" -DCMAKE_BUILD_TYPE=Release
          msbuild concealX.sln /p:Configuration=Release /m:2
      
      - name: Prepare release
        shell: powershell
        run: |
          mkdir build/bin
          mv build/src/Release/conceald.exe build/bin
          mv build/src/Release/concealwallet.exe build/bin
          mv build/src/Release/optimizer.exe build/bin
          mv build/src/Release/walletd.exe build/bin

      - name: Upload To GH Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.setup.outputs.release_name }}
          path: build/bin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-ubuntu18:
    name: Ubuntu 18.04
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@master

      - name: Prepare version
        id: setup
        run: |
          os=ubuntu-18.04
          ccx_version=${GITHUB_SHA::7}
          release_name=ccx-cli-"$os"-dev-"$ccx_version"
          echo "::set-output name=release_name::${release_name}"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y make cmake gcc g++ libboost-all-dev

      - name: Build
        id: build
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          make -j2

      - name: Prepare release
        run: |
          mkdir build/bin
          mv build/src/conceald build/bin
          mv build/src/concealwallet build/bin
          mv build/src/optimizer build/bin
          mv build/src/walletd build/bin

      - name: Upload To GH Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.setup.outputs.release_name }}
          path: build/bin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-ubuntu20:
    name: Ubuntu 20.04
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@master

      - name: Prepare version
        id: setup
        run: |
          os=ubuntu-20.04
          ccx_version=${GITHUB_SHA::7}
          release_name=ccx-cli-"$os"-dev-"$ccx_version"
          echo "::set-output name=release_name::${release_name}"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y make cmake gcc g++ libboost-all-dev

      - name: Build
        id: build
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          make -j2

      - name: Prepare release
        run: |
          mkdir build/bin
          mv build/src/conceald build/bin
          mv build/src/concealwallet build/bin
          mv build/src/optimizer build/bin
          mv build/src/walletd build/bin

      - name: Upload To GH Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.setup.outputs.release_name }}
          path: build/bin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-ubuntu20-clang:
    name: Ubuntu 20.04
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@master

      - name: Prepare version
        id: setup
        run: |
          os=ubuntu-20.04-clang
          ccx_version=${GITHUB_SHA::7}
          release_name=ccx-cli-"$os"-dev-"$ccx_version"
          echo "::set-output name=release_name::${release_name}"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y make cmake clang libboost-all-dev

      - name: Build
        id: build
        run: |
          mkdir build
          cd build
          CC=clang CXX=clang++ cmake .. -DCMAKE_BUILD_TYPE=Release
          make -j2

      - name: Prepare release
        run: |
          mkdir build/bin
          mv build/src/conceald build/bin
          mv build/src/concealwallet build/bin
          mv build/src/optimizer build/bin
          mv build/src/walletd build/bin

      - name: Upload To GH Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.setup.outputs.release_name }}
          path: build/bin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-macos10:
    name: macOS 10.15
    runs-on: macos-10.15
    steps:
      - uses: actions/checkout@master

      - name: Prepare version
        id: setup
        run: |
          os=macos-10.15
          ccx_version=${GITHUB_SHA::7}
          release_name=ccx-cli-"$os"-dev-"$ccx_version"
          echo "::set-output name=release_name::${release_name}"

      - name: Install dependencies
        run: |
          brew install boost

      - name: Build
        id: build
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          make -j2

      - name: Prepare release
        run: |
          mkdir build/bin
          mv build/src/conceald build/bin
          mv build/src/concealwallet build/bin
          mv build/src/optimizer build/bin
          mv build/src/walletd build/bin

      - name: Upload To GH Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.setup.outputs.release_name }}
          path: build/bin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-macos11:
    name: macOS 11
    runs-on: macos-11
    steps:
      - uses: actions/checkout@master

      - name: Prepare version
        id: setup
        run: |
          os=macos-11
          ccx_version=${GITHUB_SHA::7}
          release_name=ccx-cli-"$os"-dev-"$ccx_version"
          echo "::set-output name=release_name::${release_name}"

      - name: Install dependencies
        run: |
          brew install boost

      - name: Build
        id: build
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          make -j2

      - name: Prepare release
        run: |
          mkdir build/bin
          mv build/src/conceald build/bin
          mv build/src/concealwallet build/bin
          mv build/src/optimizer build/bin
          mv build/src/walletd build/bin

      - name: Upload To GH Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.setup.outputs.release_name }}
          path: build/bin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
